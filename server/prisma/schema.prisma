// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id             Int           @id @default(autoincrement())
  username       String        @unique
  password       String
  status         String        @default("active") // active, locked
  failedAttempts Int           @default(0)
  createdAt      DateTime      @default(now())
    role           String        @default("user") // default role
  lockTo DateTime?  
  ActiveTokens   ActiveToken[]
}

model ActiveToken {
  id        Int      @id @default(autoincrement())
  userId    Int
  token     String   @unique
  createdAt DateTime @default(now())
  user      User     @relation(fields: [userId], references: [id], onDelete: Cascade)
}

model Room{
   id        Int      @id @default(autoincrement())
   room_name      String
    deparment_id   Int
    deparment      Deparment     @relation(fields: [deparment_id], references: [id], onDelete: Cascade)
  Devices Device[]
}
model Deparment{
   id        Int      @id @default(autoincrement())
   deparment_name      String
   rooms Room[]
}
model Category{
  id  Int  @id @default(autoincrement())
  name String
  Devices Device[]
}
model Device{
  id  Int  @id @default(autoincrement())
  name String
  model String
  serial_number String
  manufacturer String
purchase_date DateTime
price Int
status_id Int
category_id Int
qr_code String
room_id Int
 Room      Room     @relation(fields: [room_id], references: [id], onDelete: Cascade)
 Category     Category     @relation(fields: [category_id], references: [id], onDelete: Cascade)
 Status   Status  @relation(fields: [status_id], references: [id], onDelete: Cascade)
}

model Status{
  id   Int  @id @default(autoincrement())
  name String
  Devices Device[]
}
